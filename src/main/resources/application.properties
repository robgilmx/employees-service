spring.application.name=employees-service

server.port = 8087
spring.datasource.url=jdbc:postgresql://localhost:5432/ksq_es0120
spring.datasource.username=ksq_es0120
spring.datasource.password=HumanResources99
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

#Microservice Discovery
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.instance-id=${spring.application.name}:${random.value}
spring.cloud.consul.discovery.service-name=${spring.application.name}

app.files=files-service
app.time-manager=time-management-service
microservices.files = http://${app.files}/
microservices.time = http://${app.time-manager}/

#Oauth2 Security

rest.security.issuer-uri=http://localhost:8180/auth/realms/KSQEMPSYS2001
rest.security.enabled=true
rest.security.api-matcher=/api/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600

security.oauth2.resource.id=${spring.application.name}
security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/userinfo
security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqlxvFqE+qNWEAidb1UQkoQc9x+6wCTesVISJnQm3Xe3YVn6e+APHIddNGRAIv+5bHxfLWLoualiF2dShExUGRizdUKi0zdHq9Hafir6AmfXlFddhGPau60SofqzcgedKJYEtub586KwWVlchT3UZA23+WFnvBDM93UVjHmw7MMAmfCt0530eqr6H2fqwuNuc24Yo8ATj6BaDuck3F0ogBdW47IwBsdtldJxCXW79Lu/+F/NSIN5wQqgWoI/ZELyYwm8JDEko1k1cuVBdreYbypSZ1CMFQT6MSulXNEZAyZ/UnXNaKnZZCUSpgjr1FVbAJ/33y2/rq4Euyxa61RBoFQIDAQAB-----END PUBLIC KEY-----

# If this micro-services that needs to call another
# secured micro-service
spring.security.oauth2.client.registration.files-service.client-name=${app.files}
spring.security.oauth2.client.registration.files-service.client-id=${app.files}
spring.security.oauth2.client.registration.files-service.client-secret=b218f1cd-38a8-40f3-8dff-6674ca7059de
spring.security.oauth2.client.registration.files-service.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.files-service.redirect-uri=http://localhost:8089/
spring.security.oauth2.client.registration.files-service.scope=openid
spring.security.oauth2.client.provider.files-service.token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.files-service.authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.files-service.user-name-attribute=user_name

spring.security.oauth2.client.registration.time-management-service.client-name=${app.time-manager}
spring.security.oauth2.client.registration.time-management-service.client-id=${app.time-manager}
spring.security.oauth2.client.registration.time-management-service.client-secret=88295ef2-ebe1-4bb6-bf9c-7b372a1d864b
spring.security.oauth2.client.registration.time-management-service.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.time-management-service.redirect-uri=http://localhost:8088/
spring.security.oauth2.client.registration.time-management-service.scope=openid
spring.security.oauth2.client.provider.time-management-service.token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.time-management-service.authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.time-management-service.user-name-attribute=user_name